void print_generate_keys(){
    printf("  ____                           _         _  __\n / ___| ___ _ __   ___ _ __ __ _| |_ ___  | |/ /___ _   _ ___\n| |  _ / _ \\ '_ \\ / _ \\ '__/ _` | __/ _ \\ | ' // _ \\ | | / __|\n| |_| |  __/ | | |  __/ | | (_| | ||  __/ | . \\  __/ |_| \\__ \\ \n \\____|\\___|_| |_|\\___|_|  \\__,_|\\__\\___| |_|\\_\\___|\\__, |___/\n                                                    |___/\n\n");
}

void print_encrypting(){
    printf(" _____                             _   _\n| ____|_ __   ___ _ __ _   _ _ __ | |_(_)_ __   __ _\n|  _| | '_ \\ / __| '__| | | | '_ \\| __| | '_ \\ / _` |\n| |___| | | | (__| |  | |_| | |_) | |_| | | | | (_| |\n|_____|_| |_|\\___|_|   \\__, | .__/ \\__|_|_| |_|\\__, |\n                       |___/|_|                |___/\n\n");
}

void print_decrypting(){
    printf(" ____                             _   _\n|  _ \\  ___  ___ _ __ _   _ _ __ | |_(_)_ __   __ _\n| | | |/ _ \\/ __| '__| | | | '_ \\| __| | '_ \\ / _` |\n| |_| |  __/ (__| |  | |_| | |_) | |_| | | | | (_| |\n|____/ \\___|\\___|_|   \\__, | .__/ \\__|_|_| |_|\\__, |\n                      |___/|_|                |___/\n\n");
}

void by_cryptics(){
    printf(" ____           ____                  _   _\n| __ ) _   _   / ___|_ __ _   _ _ __ | |_(_) ___ ___\n|  _ \\| | | | | |   | '__| | | | '_ \\| __| |/ __/ __|\n| |_) | |_| | | |___| |  | |_| | |_) | |_| | (__\\__ \\ \n|____/ \\__, |  \\____|_|   \\__, | .__/ \\__|_|\\___|___/\n       |___/              |___/|_|\n\n");
}

void cryptics(){
    printf("  ____                  _   _\n / ___|_ __ _   _ _ __ | |_(_) ___ ___\n| |   | '__| | | | '_ \\| __| |/ __/ __|\n| |___| |  | |_| | |_) | |_| | (__\\__ \\ \n \\____|_|   \\__, | .__/ \\__|_|\\___|___/\n            |___/|_|\n\n");
}

void welcome(){
    printf("\\ \\      / /__| | ___ ___  _ __ ___   ___  | |_ ___\n \\ \\ /\\ / / _ \\ |/ __/ _ \\| '_ ` _ \\ / _ \\ | __/ _ \\ \n  \\ V  V /  __/ | (_| (_) | | | | | |  __/ | || (_) |\n   \\_/\\_/ \\___|_|\\___\\___/|_| |_| |_|\\___|  \\__\\___/\n \n ____            _           _     ____  ____    _\n|  _ \\ _ __ ___ (_) ___  ___| |_  |  _ \\/ ___|  / \\ \n| |_) | '__/ _ \\| |/ _ \\/ __| __| | |_) \\___ \\ / _ \\ \n|  __/| | | (_) | |  __/ (__| |_  |  _ < ___) / ___ \\ \n|_|   |_|  \\___// |\\___|\\___|\\__| |_| \\_\\____/_/   \\_\\ \n              |__/\n\n");
}

void print_exit(){
    printf(" _____      _ _   \n| ____|_  _(_) |_\n|  _| \\ \\/ / | __|\n| |___ >  <| | |_\n|_____/_/\\_\\_|\\__|");
}